{
    "openapi": "3.0.0",
    "info": {
        "title": "CMM API Documentation",
        "version": "0.1"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api/",
            "description": "CMM env"
        }
    ],
    "paths": {
        "/api": {},
        "/coins": {
            "get": {
                "tags": [
                    "Coin"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getCoin",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show Coins all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Coin"
                ],
                "summary": "Creates a new Coin",
                "description": "Creates a new Coin",
                "operationId": "627d76d6a39d34e282e313322ba4ba64",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Coin"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Coin resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/coins/{id}": {
            "get": {
                "tags": [
                    "Coin"
                ],
                "summary": "Get Coin information",
                "description": "Returns Coin data",
                "operationId": "getCoinById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coin id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Coin"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Coin"
                ],
                "summary": "Update existing Coin",
                "description": "Returns updated Coin data",
                "operationId": "updateCoin",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coin id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Coin"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Coin"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Coin"
                ],
                "summary": "Delete existing Coin",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteCoin",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coin id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/egress-types": {
            "get": {
                "tags": [
                    "EgressType"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getEgresstype",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show Egresstypes all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "EgressType"
                ],
                "summary": "Creates a new EgressType",
                "description": "Creates a new EgressType",
                "operationId": "956d6aa71690740550967bb983616f6f",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EgressType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The EgressType resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "  *"
                        ]
                    }
                ]
            }
        },
        "/egress-types/{id}": {
            "get": {
                "tags": [
                    "EgressType"
                ],
                "summary": "Get EgressType information",
                "description": "Returns EgressType data",
                "operationId": "getEgressTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "EgressType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EgressType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "EgressType"
                ],
                "summary": "Update existing Egresstype",
                "description": "Returns updated Egresstype data",
                "operationId": "updateEgress",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "EgressType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EgressType"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EgressType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "EgressType"
                ],
                "summary": "Delete existing EgressType",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteEgress",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "EgressType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/entities": {
            "get": {
                "tags": [
                    "Entity"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getEntity",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show Entitys all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "Entity"
                ],
                "summary": "Creates a new Entity",
                "description": "Creates a new Entity",
                "operationId": "d89ed9e7c6d4db6b69cbdfaf215afeac",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Entity"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The Entity resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/entities/{id}": {
            "get": {
                "tags": [
                    "Entity"
                ],
                "summary": "Get Entity information",
                "description": "Returns Entity data",
                "operationId": "getEntityById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Entity id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Entity"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "Entity"
                ],
                "summary": "Update existing Entity",
                "description": "Returns updated Entity data",
                "operationId": "updateEntity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Entity id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Entity"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Entity"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Entity"
                ],
                "summary": "Delete existing Entity",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteEntity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Entity id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/operation-types": {
            "get": {
                "tags": [
                    "OperationType"
                ],
                "summary": "Display a listing of the resource.",
                "operationId": "getOperationType",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "query",
                        "description": "paginate",
                        "required": false,
                        "schema": {
                            "title": "Paginate",
                            "description": "The Paginate data",
                            "type": "boolean",
                            "example": "true"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "id"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string",
                            "example": "desc"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Sort order field",
                        "schema": {
                            "title": "perPage",
                            "description": "The unique identifier of a curso resource",
                            "type": "number",
                            "default": "10"
                        }
                    },
                    {
                        "name": "dataSearch",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "Search data",
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataFilter",
                        "in": "query",
                        "description": "turno resource name",
                        "required": false,
                        "schema": {
                            "description": "The unique identifier of a turno resource",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show OperationTypes all."
                    },
                    "default": {
                        "description": "error."
                    }
                }
            },
            "post": {
                "tags": [
                    "OperationType"
                ],
                "summary": "Creates a new OperationType",
                "description": "Creates a new OperationType",
                "operationId": "da211e67eb517081b7691236f8878920",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OperationType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The OperationType resource created",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "default": {
                        "description": "an \"unexpected\" error",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": [
                            "*"
                        ]
                    }
                ]
            }
        },
        "/operation-types/{id}": {
            "get": {
                "tags": [
                    "OperationType"
                ],
                "summary": "Get OperationType information",
                "description": "Returns OperationType data",
                "operationId": "getOperationTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "OperationType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "put": {
                "tags": [
                    "OperationType"
                ],
                "summary": "Update existing OperationType",
                "description": "Returns updated OperationType data",
                "operationId": "updateOperationType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "OperationType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OperationType"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OperationType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "OperationType"
                ],
                "summary": "Delete existing OperationType",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteOperationType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "OperationType id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Coin": {
                "properties": {
                    "name": {
                        "description": "The Coin name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "symbol": {
                        "description": "The Coin symbol",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "EgressType": {
                "properties": {
                    "name": {
                        "description": "The EgressType name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "The EgressType description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Entity": {
                "properties": {
                    "name": {
                        "description": "The Entity name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "The Entity description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "OperationType": {
                "properties": {
                    "name": {
                        "description": "The OperationType name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "description": "The OperationType description",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "name": {
                        "description": "The user name",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "last_name": {
                        "description": "The Users password",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "email": {
                        "description": "The Users email",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "roles": {
                        "description": "The Product attribute_types",
                        "required": [
                            "false"
                        ],
                        "type": "array",
                        "items": {
                            "properties": {
                                "role_id": {
                                    "type": "number"
                                },
                                "branch_office_id": {
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "password": {
                        "description": "The Users password",
                        "required": [
                            "true"
                        ],
                        "type": "string"
                    },
                    "user_created_id": {
                        "description": "The Users crete",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    },
                    "user_updated_id": {
                        "description": "The Users update",
                        "required": [
                            "true"
                        ],
                        "type": "number",
                        "example": 1
                    }
                },
                "type": "object"
            }
        }
    },
    "security": [
        []
    ]
}